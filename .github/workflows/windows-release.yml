name: windows-release

on:
  push:
    tags:
      - 'v*'           # run on git tags like v1.2.3; adjust if you prefer manual dispatch
  workflow_dispatch:


jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.0'

      - name: Install MSYS2 and MinGW (Windows)
        uses: msys2/setup-msys2@v2
        with:
          update: true
          cache: true
          install: >-
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-libvips
            mingw-w64-x86_64-toolchain 
            mingw-w64-x86_64-cmake 
            mingw-w64-x86_64-ninja 
            mingw-w64-x86_64-meson 
            git 
            mingw-w64-x86_64-glib2 
            mingw-w64-x86_64-highway 
            mingw-w64-x86_64-libspng 
            mingw-w64-x86_64-nasm 
            mingw-w64-x86_64-libpng
            mingw-w64-x86_64-libimagequant

      - name: Make Temporary Directory
        shell: msys2 {0}
        run: |
          mkdir /tempdir
      
      - name: Build MozJpeg
        shell: msys2 {0}
        run: |
          cd /tempdir
          git clone https://github.com/mozilla/mozjpeg.git
          cd mozjpeg
          mkdir build && cd build
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$MINGW_PREFIX ..
          ninja install

      - name: Build Libvips
        shell: msys2 {0}
        run: |
          cd /tempdir
          git clone https://github.com/libvips/libvips.git
          cd libvips

          meson setup build \
            --prefix=$MINGW_PREFIX \
            --buildtype=release \
            -Ddeprecated=false \
            -Dmodules=disabled \
            -Dintrospection=disabled \
            -Dexamples=false \
            -Djpeg=enabled \
            -Dpng=enabled \
            -Dimagequant=enabled \
            -Dtiff=disabled \
            -Dwebp=disabled \
            -Dheif=disabled \
            -Dpdfium=disabled \
            -Dopenslide=disabled \
            -Dorc=disabled

          meson compile -C build
          meson install -C build
      
      - name: Copy DLLs
        run: |
          $MSYS_BIN = "D:\a\_temp\msys64\mingw64\bin"

          $Dlls = @(
              "libvips-42.dll",
              "libjpeg-62.dll",
              "libspng.dll",
              "libimagequant.dll",
              "libhwy.dll",
              "libglib-2.0-0.dll",
              "libgobject-2.0-0.dll",
              "libgio-2.0-0.dll",
              "libexpat-1.dll",
              "libarchive-13.dll",
              "libintl-8.dll"
          )

          foreach ($dll in $Dlls) {
              Copy-Item -Path "$MSYS_BIN\$dll" -Destination "${{ github.workspace }}\bin" -Force
          }

      - name: Run GoReleaser (Windows)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: "latest"
          args: release --config .goreleaser.windows.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CGO_ENABLED: 1
          CGO_CFLAGS: "-ID:\\a\\_temp\\msys64\\mingw64\\include -ID:\\a\\_temp\\msys64\\mingw64\\include\\glib-2.0 -ID:\\a\\_temp\\msys64\\mingw64\\lib\\glib-2.0\\include"
          CGO_LDFLAGS: "-LD:\\a\\_temp\\msys64\\mingw64\\lib"
          PKG_CONFIG_PATH: "${{ github.workspace }}\\vips-dev-8.17\\lib\\pkgconfig"
          GOEXPERIMENT: "jsonv2"

      - name: wer is my lib bips
        run: pkg-config --libs --cflags vips
        shell: msys2 {0}